---------- ЗАПУСК ПРИЛОЖЕНИЯ ----------
1. docker-compose up --build -d (создаем образы для контейнера из файла 'docker-compose.yml' и сразу запускаем его)
2. docker ps (находим id mysql:5.7.16 и копируем его в файле настроек приложения подключения к БД config->config_db.php в строку mysql:host=)
3. https://127.0.0.1:8080/ (после запуска контейнера приложение можно найти по данному адрессу)
4. docker (папка с настройками для контейнера и бд)
4. nginx:1.10 (сервер)
5. php:7.1-fpm (менеджер процессов php)
6. php:7.1-cli (интерфейс командной строки php)
6. mysql:5.7.16 (база данных)
7. sudo chmod -R 777 path->testforsok (устанавливаем доступ к проекту чтобы ошибки записывались в errors.log; path->testforsok путь проекта от корня)
8. config->init.php (чтобы включить отображение ошибок у константы DEBUG нужно поставить 1)
======================================================

---------- ЯДРО ПРИЛОЖЕНИЯ ----------
1. vendor->testforsok->core (папка с ядром приложения)
1.1 base (базовые: контроллер, модель и вид)
1.2 libs (дополнительные функции)
1.3 App.php (главный файл, ядро приложения)
1.4 Db.php (подключение к БД)
1.5 ErrorHandler.php (обработчик ошибок)
1.6 Router.php (маршрутизатор приложения)
1.7 TSingleton.php (трэйт на основе паттерна Singleton)
======================================================

---------- ПРИЛОЖЕНИЕ ----------
1. app (содержит контроллеры, модели и виды разрабатываемого приложения)

======================================================

---------- ДОПОЛНИТЕЛЬНЫЕ ПАПКИ ----------
1. public (содежит подключаемые css и js файлы, изображения, шаблоны вывода ошибок)
2. tmp (содержит файл с сохраненными ошибками)

======================================================

---------- ПОДКЛЮЧАЕМЫЕ БИБЛИОТЕКИ ----------
1. gabordemooij/redbean (библиотека RedBeanPHP работает с драйверами PDO, поэтому имеет защиту от SQL-инъекций)
2. vlucas/valitron (библиотека валидации)

======================================================

---------- ВРЕМЯ ИСПОЛНЕНИЯ ЗАДАНИЯ ----------

К сожалению не получалось уделять каждый день на выполнение задание.
Приблизительно:
1. Разработка ядра приложения - 4 дня.
2. Настройка и запуск docker - 4 часа.
3. Верстка шаблонов - 4 часа.
4. Разработка приложения - 3 дня.
5. Тестирование в сумме - 1 день.
6. Документация в сумме - 1 день.

======================================================